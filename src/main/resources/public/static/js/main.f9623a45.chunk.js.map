{"version":3,"sources":["App.tsx","index.tsx"],"names":["window","location","hostname","port","protocol","wsHost","includes","TableTop","args","small","width","height","large","useState","dimensions","setDimensions","onClick","prev","style","src","frame","undefined","ReactDOM","render","messages","setMessages","message","setMessage","user","setUser","errors","setErrors","stream","setStream","sessions","setSessions","camera","setCamera","STATIC_OPTIONS","useMemo","shouldReconnect","reconnectAttempts","reconnectInterval","ReadyState","useWebSocket","sendMessage","lastMessage","readyState","send","useCallback","messageType","content","JSON","stringify","useEffect","incomingMessage","parse","data","console","log","type","joining","Object","fromEntries","entries","filter","leaving","hasOwnProperty","sessionId","navigator","mediaDevices","getUserMedia","audio","video","noiseSuppression","then","catch","error","name","getTracks","forEach","track","stop","sendTextMessage","trim","Promise","resolve","add","Paper","Grid","container","item","lg","map","id","key","Button","variant","getVideoTracks","ImageCapture","takePhoto","blob","reader","FileReader","readAsDataURL","onloadend","result","TextField","label","autoFocus","value","onChange","event","target","onKeyUp","ctrlKey","List","m","ListItem","createdAt","slice","document","getElementById"],"mappings":"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","file":"static/js/main.f9623a45.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {Button, Grid, List, ListItem, Paper, TextField} from '@material-ui/core'\nimport useWebSocket from 'react-use-websocket';\n\nconst {hostname, port, protocol} = window.location\nconst wsHost = `${protocol === 'https:' ? 'wss:' : 'ws:'}//${hostname}:${['3000', '3001', '3002', '3003'].includes(port) ? 8080 : port}`\n\nconst TableTop = (args: {frame: string|null}) => {\n  const small = {width: 480, height: 270};\n  const large = {width: 960, height: 540};\n  const [dimensions, setDimensions] = useState(small)\n\n  const toggleSize = () => {\n    setDimensions(prev => prev.width === 480 ? large : small)\n  }\n\n  return <img onClick={toggleSize} style={dimensions} src={args.frame || undefined} />\n}\n\nexport const App = () => {\n  const [messages, setMessages] = useState<{user: string, message: string, createdAt: string}[]>([])\n  const [message, setMessage] = useState<string>('')\n  const [user, setUser] = useState<string>('anonymous')\n  const [errors, setErrors] = useState<string[]>([])\n  const [stream, setStream] = useState<MediaStream>()\n  const [sessions, setSessions] = useState<Record<string, string|null>>({})\n  const [camera, setCamera] = useState(false)\n\n  const STATIC_OPTIONS = useMemo(() => ({\n    shouldReconnect: () => true,\n    reconnectAttempts: 10,\n    reconnectInterval: 3000,\n  }), []);\n  const ReadyState = [\n    'CONNECTING',\n    'OPEN',\n    'CLOSING',\n    'CLOSED'\n  ]\n\n  const [sendMessage, lastMessage, readyState] = useWebSocket(`${wsHost}/socket`, STATIC_OPTIONS);\n\n\n  type MessageType = 'AddMessage' | 'LoadMessages' | 'VideoFrame'\n  const send = useCallback(\n    (messageType: MessageType, content: object = {}) => sendMessage(JSON.stringify({...content, messageType})),\n    [sendMessage]\n  )\n  const add = (message: string, user: string) => Promise.resolve(send('AddMessage', {message, user}))\n\n  useEffect(() => {\n    if (!lastMessage && ReadyState[readyState] === 'OPEN') { send('LoadMessages') }\n  }, [readyState, lastMessage, ReadyState, send])\n\n  useEffect(() => {\n    if (lastMessage) {\n      const incomingMessage = JSON.parse(lastMessage.data);\n      console.log(incomingMessage)\n      switch (incomingMessage.type) {\n        case 'Message':\n          setMessages(prev => [...prev, incomingMessage])\n          break;\n        case 'JoiningUser':\n          setSessions(prev => ({...prev, [incomingMessage.joining]: null}))\n          break;\n        case 'LeavingUser':\n          setSessions(prev => Object.fromEntries(Object.entries(prev).filter(([id]) => id != incomingMessage.leaving)))\n          break;\n        case 'SessionVideoFrame':\n          if (sessions.hasOwnProperty(incomingMessage.sessionId)) {\n            setSessions((prev) => ({...prev, [incomingMessage.sessionId]: incomingMessage.frame}))\n          }\n          break;\n        default: break;\n      }\n    }\n  }, [lastMessage])\n\n\n  useEffect(() => {\n    if (camera) {\n      navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: {\n          // width: {ideal: 1920},\n          // height: {ideal: 1080},\n          noiseSuppression: true,\n          // frameRate: {ideal: 1, max: 1}\n        }\n      })\n        .then(setStream)\n        .catch(function (error) {\n          if (error.name === 'ConstraintNotSatisfiedError') {\n            setErrors(prev => [...prev, 'The resolution x px is not supported by your device.']);\n          } else if (error.name === 'PermissionDeniedError') {\n            setErrors(prev => [...prev, 'Permissions have not been granted to use your camera and ' +\n            'microphone, you need to allow the page access to your devices in ' +\n            'order for the demo to work.']);\n          }\n          setErrors(prev => [...prev, 'getUserMedia error: ' + error.name]);\n        })\n    } else {\n      stream?.getTracks()\n        .forEach((track) => track.stop())\n      setStream(undefined)\n      setErrors([])\n    }\n  }, [camera])\n\n  const sendSnapshot = () => {\n    if (ReadyState[readyState] === 'OPEN' && stream && stream?.getVideoTracks()[0]?.readyState === 'live') {\n      // @ts-ignore ImageCapture\n      new ImageCapture(stream.getVideoTracks()[0]).takePhoto()\n        .then((blob: Blob) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob)\n          reader.onloadend = (() => { send('VideoFrame', {frame: reader.result, user: 'test'}) })\n        })\n    }\n  }\n\n  const sendTextMessage = () => {\n    if (message.trim()) {\n      add(message.trim(), user)\n        .then(() => setMessage(''))\n    }\n  }\n\n  return <Paper>\n    <Grid container>\n      <Grid container item lg={10}>\n        {\n          Object.entries(sessions).map(([id, frame]) =>\n            <Grid item>\n              <div>{id}</div>\n              <TableTop key={id} frame={frame} />\n            </Grid>\n          )\n        }\n      </Grid>\n      <Grid item lg={2}>\n        <div>Websocket is {ReadyState[readyState]}</div>\n        <Button\n          variant=\"contained\"\n          onClick={() => setCamera(prev => !prev)}>Toggle video ({camera ? 'On' : 'Off'})</Button>\n        <Button variant=\"contained\" onClick={sendSnapshot} >Send snapshot</Button>\n        <ul>{errors.map(error => <li>{error}</li>)}</ul>\n        <TextField\n          variant=\"filled\"\n          label=\"User\"\n          autoFocus={true}\n          value={user}\n          onChange={event => setUser(event.target.value)}\n        />\n        <TextField\n          variant=\"filled\"\n          label=\"Type your message\"\n          autoFocus={true}\n          value={message}\n          onChange={event => setMessage(event.target.value)}\n          onKeyUp={event => { if (event.ctrlKey && event.key) { sendTextMessage() } }}\n        />\n        <Button variant=\"contained\" onClick={sendTextMessage}>Send Message (ctrl+⏎)</Button>\n        <List>\n          {messages.map(m => <ListItem key={m.createdAt}>{m.createdAt.slice(11, 19)} [{m.user}]: {m.message}</ListItem>)}\n        </List>\n\n      </Grid>\n    </Grid>\n  </Paper>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}